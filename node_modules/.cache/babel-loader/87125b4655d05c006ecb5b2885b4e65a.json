{"ast":null,"code":"import React from 'react';\nimport axios from 'axios';\nexport class Funciones extends React.Component {\n  constructor(props) {\n    super(props);\n    this.URL_datosUsuarios = 'http://localhost:5000/usuarios';\n    /* mis datos en JSON*/\n\n    this.emptyUsuario = {\n      _id: -1,\n      dni: '',\n      nombre: '',\n      apellido: '',\n      rol: '',\n      celular: '',\n      email: '',\n      ingreso: ''\n    };\n    this.state = {\n      usuarios: [],\n      selectedUsuario: this.emptyUsuario\n    };\n    this.onFormChange = this.onFormChange.bind(this);\n    this.onEditUser = this.onEditUser.bind(this);\n    this.onDeleteUser = this.onDeleteUser.bind(this);\n    this.onClearUser = this.onClearUser.bind(this);\n    this.onSaveUser = this.onSaveUser.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(this.URL_datosUsuarios, {\n      headers: {\n        'token': sessionStorage.getItem('token')\n      }\n    }).then(resp => {\n      console.log('Respuesta de listar Usuarios');\n      console.log(resp.data);\n      this.setState({\n        usuarios: resp.data\n      });\n    }).catch(err => {\n      console.log('Hubo error listando los estudiantes', err);\n    });\n  }\n\n  onFormChange(userCurrentState) {\n    console.log('cambió el formulario', userCurrentState);\n    this.setState({\n      selectedUsuario: userCurrentState\n    });\n  }\n\n  onEditUser(usuario) {\n    console.log('quiero editar un usuario', usuario);\n    this.setState({\n      selectedUsuario: usuario\n    });\n  }\n\n  onDeleteUser(usuarioId) {\n    console.log('quiero eliminar un usuario', usuarioId);\n    axios.delete(`${this.URL_datosUsuarios}/${usuarioId}`, {\n      headers: {\n        'token': sessionStorage.getItem('token')\n      }\n    }).then(data => {\n      this.setState((state, props) => ({\n        usuarios: this.state.usuarios.filter(st => st._id !== usuarioId),\n        selectedUsuario: this.emptyUsuario\n      }));\n    }).catch(err => {\n      console.log('hubo error borrando');\n    });\n  }\n\n  onClearUser() {\n    console.log('vamos a limpiar el usuario');\n    this.setState({\n      selectedUsuario: this.emptyUsuario\n    });\n  }\n\n  onSaveUser(evt) {\n    evt.preventDefault();\n    const usuario = this.state.selectedUsuario;\n\n    if (usuario.nombre === '' || usuario.dni === '' || usuario.apellido === '' || usuario.rol === '' || usuario.celular === '' || usuario.email === '' || usuario.ingreso === '') {\n      alert('Hay errores en el formulario');\n      return;\n    }\n\n    if (this.state.selectedUsuario._id === -1) {\n      console.log('vamos a hacer un POST', this.state.selectedUsuario);\n      axios.post(this.URL_datosUsuarios, { ...usuario,\n        _id: null\n      }, {\n        headers: {\n          'token': sessionStorage.getItem('token')\n        }\n      }).then(resp => {\n        console.log('Todo bien con el post', resp);\n        this.setState((state, props) => ({\n          usuarios: [...state.usuarios, resp.data],\n          selectedUsuario: this.emptyUsuario\n        }));\n      }).catch(err => {\n        console.log('error al hacer post', err);\n      });\n    } else {\n      console.log('vamos a hacer un PUT', this.state.selectedUsuario);\n      axios.put(`${this.URL_datosUsuarios}/${usuario._id}`, { ...usuario\n      }, {\n        headers: {\n          'token': sessionStorage.getItem('token')\n        }\n      }).then(resp => {\n        console.log('Todo bien con el put', resp);\n        this.setState((state, props) => ({\n          usuarios: state.usuarios.map(st => st._id === usuario._id ? usuario : st),\n          selectedUsuario: this.emptyUsuario\n        }));\n      }).catch(err => {\n        console.log('error al hacer post', err);\n      });\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/charr/OneDrive/MisionTic/Mi Ciclo 3/dima/src/components/Funciones.js"],"names":["React","axios","Funciones","Component","constructor","props","URL_datosUsuarios","emptyUsuario","_id","dni","nombre","apellido","rol","celular","email","ingreso","state","usuarios","selectedUsuario","onFormChange","bind","onEditUser","onDeleteUser","onClearUser","onSaveUser","componentDidMount","get","headers","sessionStorage","getItem","then","resp","console","log","data","setState","catch","err","userCurrentState","usuario","usuarioId","delete","filter","st","evt","preventDefault","alert","post","put","map"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport class Funciones extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.URL_datosUsuarios = 'http://localhost:5000/usuarios'; /* mis datos en JSON*/\r\n    this.emptyUsuario = { _id: -1 , dni: '', nombre: '', apellido: '', rol: '', celular: '', email: '' , ingreso: ''};\r\n    this.state = {\r\n        usuarios: [],\r\n        selectedUsuario: this.emptyUsuario,\r\n    };\r\n\r\n    this.onFormChange = this.onFormChange.bind(this);\r\n    this.onEditUser = this.onEditUser.bind(this);\r\n    this.onDeleteUser = this.onDeleteUser.bind(this);\r\n    this.onClearUser = this.onClearUser.bind(this);\r\n    this.onSaveUser = this.onSaveUser.bind(this);\r\n    \r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(this.URL_datosUsuarios,{\r\n        headers:{ 'token': sessionStorage.getItem('token')}\r\n    }).then((resp) => {\r\n        console.log('Respuesta de listar Usuarios');\r\n        console.log(resp.data);\r\n        this.setState({usuarios:resp.data });\r\n    }).catch(err => {\r\n        console.log('Hubo error listando los estudiantes', err);\r\n    });\r\n  }\r\n\r\n    onFormChange(userCurrentState){\r\n        console.log('cambió el formulario', userCurrentState);\r\n        this.setState({ selectedUsuario: userCurrentState });\r\n    }\r\n  \r\n    onEditUser(usuario) {\r\n        console.log('quiero editar un usuario', usuario);\r\n        this.setState({ selectedUsuario: usuario });\r\n    }\r\n  \r\n    onDeleteUser(usuarioId) {\r\n        console.log('quiero eliminar un usuario', usuarioId);\r\n        axios.delete(`${this.URL_datosUsuarios}/${usuarioId}`,\r\n        {headers:{ 'token': sessionStorage.getItem('token')}}).then(data => {\r\n          this.setState((state, props) => ({\r\n            usuarios: this.state.usuarios.filter(st => st._id !== usuarioId),\r\n            selectedUsuario: this.emptyUsuario\r\n          }))\r\n        }).catch(err => {\r\n          console.log('hubo error borrando');\r\n        });\r\n    }\r\n  \r\n    onClearUser() {\r\n        console.log('vamos a limpiar el usuario');\r\n        this.setState({ selectedUsuario: this.emptyUsuario });\r\n    }\r\n  \r\n    onSaveUser(evt) {\r\n        evt.preventDefault();\r\n        const usuario = this.state.selectedUsuario;\r\n        if (usuario.nombre === '' || usuario.dni === '' || usuario.apellido === '' || usuario.rol === '' || usuario.celular === '' || usuario.email === '' || usuario.ingreso === '') {\r\n          alert('Hay errores en el formulario');\r\n          return;\r\n        }\r\n        if (this.state.selectedUsuario._id === -1) {\r\n          console.log('vamos a hacer un POST', this.state.selectedUsuario);\r\n          axios.post(this.URL_datosUsuarios, { ...usuario, _id: null } , \r\n            {headers:{ 'token': sessionStorage.getItem('token')}}).then((resp) => {\r\n            console.log('Todo bien con el post', resp);\r\n            this.setState((state, props) => ({\r\n                usuarios: [...state.usuarios, resp.data],\r\n                selectedUsuario: this.emptyUsuario\r\n            }))\r\n          }).catch(err => {\r\n            console.log('error al hacer post', err);\r\n          });\r\n        } else {\r\n          console.log('vamos a hacer un PUT', this.state.selectedUsuario);\r\n          axios.put(`${this.URL_datosUsuarios}/${usuario._id}`, { ...usuario },\r\n            {headers:{ 'token': sessionStorage.getItem('token')}}).then((resp) => {\r\n            console.log('Todo bien con el put', resp);\r\n            this.setState((state, props) => ({\r\n                usuarios: state.usuarios.map(st => st._id === usuario._id ? usuario : st),\r\n                selectedUsuario: this.emptyUsuario\r\n            }))\r\n          }).catch(err => {\r\n            console.log('error al hacer post', err);\r\n          });\r\n        }\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}